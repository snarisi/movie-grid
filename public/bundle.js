'use strict';

angular.module('movieGrid', ['ui.router']).config(function ($urlRouterProvider, $locationProvider) {
	$locationProvider.html5Mode(true);
	$urlRouterProvider.otherwise('/movies/1');
});

'use strict';

angular.module('movieGrid').controller('MoviesCtrl', function ($scope, movies) {
	$scope.movies = movies.results;
	$scope.page = {
		current: movies.page,
		total: movies.total_pages
	};

	$scope.posterUrl = function (path) {
		return 'http://image.tmdb.org/t/p/w185' + path;
	};
});

'use strict';

angular.module('movieGrid').factory('Movies', function ($http, $q) {
	var factory = {};
	var pageCache = {};
	var MAX_AGE = 36000000;

	var checkCache = function checkCache(page) {
		return pageCache[page] && Date.now() - pageCache[page].time <= MAX_AGE;
	};
	factory.getPage = function (page) {
		if (checkCache(page)) return $q.when(pageCache[page].data);

		return $http.get('/api/movies/' + page).then(function (res) {
			pageCache[page] = { data: res.data, time: Date.now() };
			return res.data;
		});
	};

	return factory;
});

angular.module('movieGrid').config(function ($stateProvider) {
	$stateProvider.state('movies', {
		url: '/movies/:page',
		controller: 'MoviesCtrl',
		templateUrl: 'movies/movies.html',
		resolve: {
			movies: function movies(Movies, $stateParams) {
				return Movies.getPage($stateParams.page);
			}
		}
	});
});

angular.module('movieGrid').directive('pageNav', function () {
	return {
		restrict: 'E',
		scope: {
			page: '='
		},
		templateUrl: 'page-nav/page-nav.html',
		link: function link(scope, el, attrs) {

			scope.listPages = function () {
				var curr = scope.page.current;
				if (curr === scope.page.total - 1) {
					return [curr - 1, curr, curr + 1];
				} else if (curr === scope.page.total) {
					return [curr - 2, curr - 1, curr];
				} else {
					return [curr, curr + 1, curr + 2];
				}
			};
		}
	};
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiLCJtb3ZpZXMvbW92aWVzLmNvbnRyb2xsZXIuanMiLCJtb3ZpZXMvbW92aWVzLmZhY3RvcnkuanMiLCJtb3ZpZXMvbW92aWVzLmpzIiwicGFnZS1uYXYvcGFnZS1uYXYuZGlyZWN0aXZlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsUUFBQSxNQUFBLENBQUEsV0FBQSxFQUFBLENBQUEsV0FBQSxDQUFBLEVBQ0EsTUFEQSxDQUNBLFVBQUEsa0JBQUEsRUFBQSxpQkFBQSxFQUFBO0FBQ0EsbUJBQUEsU0FBQSxDQUFBLElBQUE7QUFDQSxvQkFBQSxTQUFBLENBQUEsV0FBQTtBQUNBLENBSkE7O0FDQUE7O0FBRUEsUUFBQSxNQUFBLENBQUEsV0FBQSxFQUFBLFVBQUEsQ0FBQSxZQUFBLEVBQUEsVUFBQSxNQUFBLEVBQUEsTUFBQSxFQUFBO0FBQ0EsUUFBQSxNQUFBLEdBQUEsT0FBQSxPQUFBO0FBQ0EsUUFBQSxJQUFBLEdBQUE7QUFDQSxXQUFBLE9BQUEsSUFEQTtBQUVBLFNBQUEsT0FBQTtBQUZBLEVBQUE7O0FBS0EsUUFBQSxTQUFBLEdBQUEsVUFBQSxJQUFBLEVBQUE7QUFDQSw0Q0FBQSxJQUFBO0FBQ0EsRUFGQTtBQUdBLENBVkE7O0FDRkE7O0FBRUEsUUFBQSxNQUFBLENBQUEsV0FBQSxFQUFBLE9BQUEsQ0FBQSxRQUFBLEVBQUEsVUFBQSxLQUFBLEVBQUEsRUFBQSxFQUFBO0FBQ0EsS0FBQSxVQUFBLEVBQUE7QUFDQSxLQUFBLFlBQUEsRUFBQTtBQUNBLEtBQUEsVUFBQSxRQUFBOztBQUVBLEtBQUEsYUFBQSxTQUFBLFVBQUEsQ0FBQSxJQUFBLEVBQUE7QUFDQSxTQUFBLFVBQUEsSUFBQSxLQUFBLEtBQUEsR0FBQSxLQUFBLFVBQUEsSUFBQSxFQUFBLElBQUEsSUFBQSxPQUFBO0FBQ0EsRUFGQTtBQUdBLFNBQUEsT0FBQSxHQUFBLFVBQUEsSUFBQSxFQUFBO0FBQ0EsTUFBQSxXQUFBLElBQUEsQ0FBQSxFQUFBLE9BQUEsR0FBQSxJQUFBLENBQUEsVUFBQSxJQUFBLEVBQUEsSUFBQSxDQUFBOztBQUVBLFNBQUEsTUFBQSxHQUFBLGtCQUFBLElBQUEsRUFDQSxJQURBLENBQ0EsZUFBQTtBQUNBLGFBQUEsSUFBQSxJQUFBLEVBQUEsTUFBQSxJQUFBLElBQUEsRUFBQSxNQUFBLEtBQUEsR0FBQSxFQUFBLEVBQUE7QUFDQSxVQUFBLElBQUEsSUFBQTtBQUNBLEdBSkEsQ0FBQTtBQUtBLEVBUkE7O0FBVUEsUUFBQSxPQUFBO0FBQ0EsQ0FuQkE7O0FDRkEsUUFBQSxNQUFBLENBQUEsV0FBQSxFQUFBLE1BQUEsQ0FBQSxVQUFBLGNBQUEsRUFBQTtBQUNBLGdCQUFBLEtBQUEsQ0FBQSxRQUFBLEVBQUE7QUFDQSxPQUFBLGVBREE7QUFFQSxjQUFBLFlBRkE7QUFHQSxlQUFBLG9CQUhBO0FBSUEsV0FBQTtBQUNBLFdBQUEsZ0JBQUEsTUFBQSxFQUFBLFlBQUEsRUFBQTtBQUNBLFdBQUEsT0FBQSxPQUFBLENBQUEsYUFBQSxJQUFBLENBQUE7QUFDQTtBQUhBO0FBSkEsRUFBQTtBQVVBLENBWEE7O0FDQUEsUUFBQSxNQUFBLENBQUEsV0FBQSxFQUFBLFNBQUEsQ0FBQSxTQUFBLEVBQUEsWUFBQTtBQUNBLFFBQUE7QUFDQSxZQUFBLEdBREE7QUFFQSxTQUFBO0FBQ0EsU0FBQTtBQURBLEdBRkE7QUFLQSxlQUFBLHdCQUxBO0FBTUEsUUFBQSxjQUFBLEtBQUEsRUFBQSxFQUFBLEVBQUEsS0FBQSxFQUFBOztBQUVBLFNBQUEsU0FBQSxHQUFBLFlBQUE7QUFDQSxRQUFBLE9BQUEsTUFBQSxJQUFBLENBQUEsT0FBQTtBQUNBLFFBQUEsU0FBQSxNQUFBLElBQUEsQ0FBQSxLQUFBLEdBQUEsQ0FBQSxFQUFBO0FBQ0EsWUFBQSxDQUFBLE9BQUEsQ0FBQSxFQUFBLElBQUEsRUFBQSxPQUFBLENBQUEsQ0FBQTtBQUNBLEtBRkEsTUFFQSxJQUFBLFNBQUEsTUFBQSxJQUFBLENBQUEsS0FBQSxFQUFBO0FBQ0EsWUFBQSxDQUFBLE9BQUEsQ0FBQSxFQUFBLE9BQUEsQ0FBQSxFQUFBLElBQUEsQ0FBQTtBQUNBLEtBRkEsTUFFQTtBQUNBLFlBQUEsQ0FBQSxJQUFBLEVBQUEsT0FBQSxDQUFBLEVBQUEsT0FBQSxDQUFBLENBQUE7QUFDQTtBQUNBLElBVEE7QUFVQTtBQWxCQSxFQUFBO0FBb0JBLENBckJBIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKCdtb3ZpZUdyaWQnLCBbJ3VpLnJvdXRlciddKVxuXHQuY29uZmlnKGZ1bmN0aW9uICgkdXJsUm91dGVyUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSB7XG4gICAgJGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpO1xuICAgICR1cmxSb3V0ZXJQcm92aWRlci5vdGhlcndpc2UoJy9tb3ZpZXMvMScpO1xuXHR9KTtcbiIsIid1c2Ugc3RyaWN0JztcblxuYW5ndWxhci5tb2R1bGUoJ21vdmllR3JpZCcpLmNvbnRyb2xsZXIoJ01vdmllc0N0cmwnLCBmdW5jdGlvbiAoJHNjb3BlLCBtb3ZpZXMpIHtcblx0JHNjb3BlLm1vdmllcyA9IG1vdmllcy5yZXN1bHRzO1xuXHQkc2NvcGUucGFnZSA9IHtcblx0XHRjdXJyZW50OiBtb3ZpZXMucGFnZSxcblx0XHR0b3RhbDogbW92aWVzLnRvdGFsX3BhZ2VzXG5cdH07XG5cblx0JHNjb3BlLnBvc3RlclVybCA9IGZ1bmN0aW9uIChwYXRoKSB7XG5cdFx0cmV0dXJuIGBodHRwOi8vaW1hZ2UudG1kYi5vcmcvdC9wL3cxODUke3BhdGh9YDtcblx0fVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdtb3ZpZUdyaWQnKS5mYWN0b3J5KCdNb3ZpZXMnLCBmdW5jdGlvbiAoJGh0dHAsICRxKSB7XG5cdGNvbnN0IGZhY3RvcnkgPSB7fTtcblx0Y29uc3QgcGFnZUNhY2hlID0ge307XG5cdGNvbnN0IE1BWF9BR0UgPSAzNjAwMDAwMDtcblxuXHRjb25zdCBjaGVja0NhY2hlID0gZnVuY3Rpb24gKHBhZ2UpIHtcblx0XHRyZXR1cm4gcGFnZUNhY2hlW3BhZ2VdICYmIChEYXRlLm5vdygpIC0gcGFnZUNhY2hlW3BhZ2VdLnRpbWUpIDw9IE1BWF9BR0U7XG5cdH07XG5cdGZhY3RvcnkuZ2V0UGFnZSA9IGZ1bmN0aW9uIChwYWdlKSB7XG5cdFx0aWYgKGNoZWNrQ2FjaGUocGFnZSkpIHJldHVybiAkcS53aGVuKHBhZ2VDYWNoZVtwYWdlXS5kYXRhKTtcblxuXHRcdHJldHVybiAkaHR0cC5nZXQoYC9hcGkvbW92aWVzLyR7cGFnZX1gKVxuXHRcdFx0LnRoZW4ocmVzID0+IHtcblx0XHRcdFx0cGFnZUNhY2hlW3BhZ2VdID0geyBkYXRhOiByZXMuZGF0YSwgdGltZTogRGF0ZS5ub3coKSB9O1xuXHRcdFx0XHRyZXR1cm4gcmVzLmRhdGE7XG5cdFx0XHR9KTtcblx0fVxuXG5cdHJldHVybiBmYWN0b3J5O1xufSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnbW92aWVHcmlkJykuY29uZmlnKGZ1bmN0aW9uICgkc3RhdGVQcm92aWRlcikge1xuXHQkc3RhdGVQcm92aWRlci5zdGF0ZSgnbW92aWVzJywge1xuXHRcdHVybDogJy9tb3ZpZXMvOnBhZ2UnLFxuXHRcdGNvbnRyb2xsZXI6ICdNb3ZpZXNDdHJsJyxcblx0XHR0ZW1wbGF0ZVVybDogJ21vdmllcy9tb3ZpZXMuaHRtbCcsXG5cdFx0cmVzb2x2ZToge1xuXHRcdFx0bW92aWVzOiBmdW5jdGlvbiAoTW92aWVzLCAkc3RhdGVQYXJhbXMpIHtcblx0XHRcdFx0cmV0dXJuIE1vdmllcy5nZXRQYWdlKCRzdGF0ZVBhcmFtcy5wYWdlKTtcblx0XHRcdH1cblx0XHR9XG5cdH0pXG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKCdtb3ZpZUdyaWQnKS5kaXJlY3RpdmUoJ3BhZ2VOYXYnLCBmdW5jdGlvbiAoKSB7XG5cdHJldHVybiB7XG5cdFx0cmVzdHJpY3Q6ICdFJyxcblx0XHRzY29wZToge1xuXHRcdFx0cGFnZTogJz0nXG5cdFx0fSxcblx0XHR0ZW1wbGF0ZVVybDogJ3BhZ2UtbmF2L3BhZ2UtbmF2Lmh0bWwnLFxuXHRcdGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWwsIGF0dHJzKSB7XG5cblx0XHRcdHNjb3BlLmxpc3RQYWdlcyA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0Y29uc3QgY3VyciA9IHNjb3BlLnBhZ2UuY3VycmVudDtcblx0XHRcdFx0aWYgKGN1cnIgPT09IHNjb3BlLnBhZ2UudG90YWwgLSAxKSB7XG5cdFx0XHRcdFx0cmV0dXJuIFtjdXJyIC0gMSwgY3VyciwgY3VyciArIDFdO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGN1cnIgPT09IHNjb3BlLnBhZ2UudG90YWwpIHtcblx0XHRcdFx0XHRyZXR1cm4gW2N1cnIgLSAyLCBjdXJyIC0gMSwgY3Vycl07XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cmV0dXJuIFtjdXJyLCBjdXJyICsgMSwgY3VyciArIDJdO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59KVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
