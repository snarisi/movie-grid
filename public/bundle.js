'use strict';

angular.module('movieGrid', ['ui.router']).config(function ($urlRouterProvider, $locationProvider) {
	$locationProvider.html5Mode(true);
	$urlRouterProvider.otherwise('/movies/1');
});

angular.module('movieGrid').directive('navbar', function () {
	return {
		restrict: 'E',
		scope: {},
		templateUrl: 'navbar/navbar.html',
		link: function link(scope, el, attrs) {}
	};
});

angular.module('movieGrid').directive('pageNav', function () {
	return {
		restrict: 'E',
		scope: {
			page: '='
		},
		templateUrl: 'page-nav/page-nav.html',
		link: function link(scope, el, attrs) {

			scope.listPages = function () {
				var curr = scope.page.current;
				if (curr === scope.page.total - 1) {
					return [curr - 1, curr, curr + 1];
				} else if (curr === scope.page.total) {
					return [curr - 2, curr - 1, curr];
				} else {
					return [curr, curr + 1, curr + 2];
				}
			};
		}
	};
});

'use strict';

angular.module('movieGrid').controller('MoviesCtrl', function ($scope, movies) {
	$scope.movies = movies.results;
	$scope.page = {
		current: movies.page,
		total: movies.total_pages
	};

	$scope.posterUrl = function (path) {
		return 'http://image.tmdb.org/t/p/w185' + path;
	};
});

'use strict';

angular.module('movieGrid').factory('Movies', function ($http, $q) {
	var factory = {};
	var pageCache = {};
	var MAX_AGE = 36000000;

	var checkCache = function checkCache(page) {
		return pageCache[page] && Date.now() - pageCache[page].time <= MAX_AGE;
	};
	factory.getPage = function (page) {
		if (checkCache(page)) return $q.when(pageCache[page].data);

		return $http.get('/api/movies/' + page).then(function (res) {
			pageCache[page] = { data: res.data, time: Date.now() };
			return res.data;
		});
	};

	return factory;
});

angular.module('movieGrid').config(function ($stateProvider) {
	$stateProvider.state('movies', {
		url: '/movies/:page',
		controller: 'MoviesCtrl',
		templateUrl: 'movies/movies.html',
		resolve: {
			movies: function movies(Movies, $stateParams) {
				return Movies.getPage($stateParams.page);
			}
		}
	});
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiLCJuYXZiYXIvbmF2YmFyLmRpcmVjdGl2ZS5qcyIsInBhZ2UtbmF2L3BhZ2UtbmF2LmRpcmVjdGl2ZS5qcyIsIm1vdmllcy9tb3ZpZXMuY29udHJvbGxlci5qcyIsIm1vdmllcy9tb3ZpZXMuZmFjdG9yeS5qcyIsIm1vdmllcy9tb3ZpZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxRQUFBLE1BQUEsQ0FBQSxXQUFBLEVBQUEsQ0FBQSxXQUFBLENBQUEsRUFDQSxNQURBLENBQ0EsVUFBQSxrQkFBQSxFQUFBLGlCQUFBLEVBQUE7QUFDQSxtQkFBQSxTQUFBLENBQUEsSUFBQTtBQUNBLG9CQUFBLFNBQUEsQ0FBQSxXQUFBO0FBQ0EsQ0FKQTs7QUNBQSxRQUFBLE1BQUEsQ0FBQSxXQUFBLEVBQUEsU0FBQSxDQUFBLFFBQUEsRUFBQSxZQUFBO0FBQ0EsUUFBQTtBQUNBLFlBQUEsR0FEQTtBQUVBLFNBQUEsRUFGQTtBQUdBLGVBQUEsb0JBSEE7QUFJQSxRQUFBLGNBQUEsS0FBQSxFQUFBLEVBQUEsRUFBQSxLQUFBLEVBQUEsQ0FFQTtBQU5BLEVBQUE7QUFRQSxDQVRBOztBQ0FBLFFBQUEsTUFBQSxDQUFBLFdBQUEsRUFBQSxTQUFBLENBQUEsU0FBQSxFQUFBLFlBQUE7QUFDQSxRQUFBO0FBQ0EsWUFBQSxHQURBO0FBRUEsU0FBQTtBQUNBLFNBQUE7QUFEQSxHQUZBO0FBS0EsZUFBQSx3QkFMQTtBQU1BLFFBQUEsY0FBQSxLQUFBLEVBQUEsRUFBQSxFQUFBLEtBQUEsRUFBQTs7QUFFQSxTQUFBLFNBQUEsR0FBQSxZQUFBO0FBQ0EsUUFBQSxPQUFBLE1BQUEsSUFBQSxDQUFBLE9BQUE7QUFDQSxRQUFBLFNBQUEsTUFBQSxJQUFBLENBQUEsS0FBQSxHQUFBLENBQUEsRUFBQTtBQUNBLFlBQUEsQ0FBQSxPQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsT0FBQSxDQUFBLENBQUE7QUFDQSxLQUZBLE1BRUEsSUFBQSxTQUFBLE1BQUEsSUFBQSxDQUFBLEtBQUEsRUFBQTtBQUNBLFlBQUEsQ0FBQSxPQUFBLENBQUEsRUFBQSxPQUFBLENBQUEsRUFBQSxJQUFBLENBQUE7QUFDQSxLQUZBLE1BRUE7QUFDQSxZQUFBLENBQUEsSUFBQSxFQUFBLE9BQUEsQ0FBQSxFQUFBLE9BQUEsQ0FBQSxDQUFBO0FBQ0E7QUFDQSxJQVRBO0FBVUE7QUFsQkEsRUFBQTtBQW9CQSxDQXJCQTs7QUNBQTs7QUFFQSxRQUFBLE1BQUEsQ0FBQSxXQUFBLEVBQUEsVUFBQSxDQUFBLFlBQUEsRUFBQSxVQUFBLE1BQUEsRUFBQSxNQUFBLEVBQUE7QUFDQSxRQUFBLE1BQUEsR0FBQSxPQUFBLE9BQUE7QUFDQSxRQUFBLElBQUEsR0FBQTtBQUNBLFdBQUEsT0FBQSxJQURBO0FBRUEsU0FBQSxPQUFBO0FBRkEsRUFBQTs7QUFLQSxRQUFBLFNBQUEsR0FBQSxVQUFBLElBQUEsRUFBQTtBQUNBLDRDQUFBLElBQUE7QUFDQSxFQUZBO0FBR0EsQ0FWQTs7QUNGQTs7QUFFQSxRQUFBLE1BQUEsQ0FBQSxXQUFBLEVBQUEsT0FBQSxDQUFBLFFBQUEsRUFBQSxVQUFBLEtBQUEsRUFBQSxFQUFBLEVBQUE7QUFDQSxLQUFBLFVBQUEsRUFBQTtBQUNBLEtBQUEsWUFBQSxFQUFBO0FBQ0EsS0FBQSxVQUFBLFFBQUE7O0FBRUEsS0FBQSxhQUFBLFNBQUEsVUFBQSxDQUFBLElBQUEsRUFBQTtBQUNBLFNBQUEsVUFBQSxJQUFBLEtBQUEsS0FBQSxHQUFBLEtBQUEsVUFBQSxJQUFBLEVBQUEsSUFBQSxJQUFBLE9BQUE7QUFDQSxFQUZBO0FBR0EsU0FBQSxPQUFBLEdBQUEsVUFBQSxJQUFBLEVBQUE7QUFDQSxNQUFBLFdBQUEsSUFBQSxDQUFBLEVBQUEsT0FBQSxHQUFBLElBQUEsQ0FBQSxVQUFBLElBQUEsRUFBQSxJQUFBLENBQUE7O0FBRUEsU0FBQSxNQUFBLEdBQUEsa0JBQUEsSUFBQSxFQUNBLElBREEsQ0FDQSxlQUFBO0FBQ0EsYUFBQSxJQUFBLElBQUEsRUFBQSxNQUFBLElBQUEsSUFBQSxFQUFBLE1BQUEsS0FBQSxHQUFBLEVBQUEsRUFBQTtBQUNBLFVBQUEsSUFBQSxJQUFBO0FBQ0EsR0FKQSxDQUFBO0FBS0EsRUFSQTs7QUFVQSxRQUFBLE9BQUE7QUFDQSxDQW5CQTs7QUNGQSxRQUFBLE1BQUEsQ0FBQSxXQUFBLEVBQUEsTUFBQSxDQUFBLFVBQUEsY0FBQSxFQUFBO0FBQ0EsZ0JBQUEsS0FBQSxDQUFBLFFBQUEsRUFBQTtBQUNBLE9BQUEsZUFEQTtBQUVBLGNBQUEsWUFGQTtBQUdBLGVBQUEsb0JBSEE7QUFJQSxXQUFBO0FBQ0EsV0FBQSxnQkFBQSxNQUFBLEVBQUEsWUFBQSxFQUFBO0FBQ0EsV0FBQSxPQUFBLE9BQUEsQ0FBQSxhQUFBLElBQUEsQ0FBQTtBQUNBO0FBSEE7QUFKQSxFQUFBO0FBVUEsQ0FYQSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnbW92aWVHcmlkJywgWyd1aS5yb3V0ZXInXSlcblx0LmNvbmZpZyhmdW5jdGlvbiAoJHVybFJvdXRlclByb3ZpZGVyLCAkbG9jYXRpb25Qcm92aWRlcikge1xuICAgICRsb2NhdGlvblByb3ZpZGVyLmh0bWw1TW9kZSh0cnVlKTtcbiAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvbW92aWVzLzEnKTtcblx0fSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnbW92aWVHcmlkJykuZGlyZWN0aXZlKCduYXZiYXInLCBmdW5jdGlvbiAoKSB7XG5cdHJldHVybiB7XG5cdFx0cmVzdHJpY3Q6ICdFJyxcblx0XHRzY29wZToge30sXG5cdFx0dGVtcGxhdGVVcmw6ICduYXZiYXIvbmF2YmFyLmh0bWwnLFxuXHRcdGxpbms6IGZ1bmN0aW9uIChzY29wZSwgZWwsIGF0dHJzKSB7XG5cdFx0XHRcblx0XHR9XG5cdH1cbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ21vdmllR3JpZCcpLmRpcmVjdGl2ZSgncGFnZU5hdicsIGZ1bmN0aW9uICgpIHtcblx0cmV0dXJuIHtcblx0XHRyZXN0cmljdDogJ0UnLFxuXHRcdHNjb3BlOiB7XG5cdFx0XHRwYWdlOiAnPSdcblx0XHR9LFxuXHRcdHRlbXBsYXRlVXJsOiAncGFnZS1uYXYvcGFnZS1uYXYuaHRtbCcsXG5cdFx0bGluazogZnVuY3Rpb24gKHNjb3BlLCBlbCwgYXR0cnMpIHtcblxuXHRcdFx0c2NvcGUubGlzdFBhZ2VzID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRjb25zdCBjdXJyID0gc2NvcGUucGFnZS5jdXJyZW50O1xuXHRcdFx0XHRpZiAoY3VyciA9PT0gc2NvcGUucGFnZS50b3RhbCAtIDEpIHtcblx0XHRcdFx0XHRyZXR1cm4gW2N1cnIgLSAxLCBjdXJyLCBjdXJyICsgMV07XG5cdFx0XHRcdH0gZWxzZSBpZiAoY3VyciA9PT0gc2NvcGUucGFnZS50b3RhbCkge1xuXHRcdFx0XHRcdHJldHVybiBbY3VyciAtIDIsIGN1cnIgLSAxLCBjdXJyXTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRyZXR1cm4gW2N1cnIsIGN1cnIgKyAxLCBjdXJyICsgMl07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn0pXG4iLCIndXNlIHN0cmljdCc7XG5cbmFuZ3VsYXIubW9kdWxlKCdtb3ZpZUdyaWQnKS5jb250cm9sbGVyKCdNb3ZpZXNDdHJsJywgZnVuY3Rpb24gKCRzY29wZSwgbW92aWVzKSB7XG5cdCRzY29wZS5tb3ZpZXMgPSBtb3ZpZXMucmVzdWx0cztcblx0JHNjb3BlLnBhZ2UgPSB7XG5cdFx0Y3VycmVudDogbW92aWVzLnBhZ2UsXG5cdFx0dG90YWw6IG1vdmllcy50b3RhbF9wYWdlc1xuXHR9O1xuXG5cdCRzY29wZS5wb3N0ZXJVcmwgPSBmdW5jdGlvbiAocGF0aCkge1xuXHRcdHJldHVybiBgaHR0cDovL2ltYWdlLnRtZGIub3JnL3QvcC93MTg1JHtwYXRofWA7XG5cdH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5hbmd1bGFyLm1vZHVsZSgnbW92aWVHcmlkJykuZmFjdG9yeSgnTW92aWVzJywgZnVuY3Rpb24gKCRodHRwLCAkcSkge1xuXHRjb25zdCBmYWN0b3J5ID0ge307XG5cdGNvbnN0IHBhZ2VDYWNoZSA9IHt9O1xuXHRjb25zdCBNQVhfQUdFID0gMzYwMDAwMDA7XG5cblx0Y29uc3QgY2hlY2tDYWNoZSA9IGZ1bmN0aW9uIChwYWdlKSB7XG5cdFx0cmV0dXJuIHBhZ2VDYWNoZVtwYWdlXSAmJiAoRGF0ZS5ub3coKSAtIHBhZ2VDYWNoZVtwYWdlXS50aW1lKSA8PSBNQVhfQUdFO1xuXHR9O1xuXHRmYWN0b3J5LmdldFBhZ2UgPSBmdW5jdGlvbiAocGFnZSkge1xuXHRcdGlmIChjaGVja0NhY2hlKHBhZ2UpKSByZXR1cm4gJHEud2hlbihwYWdlQ2FjaGVbcGFnZV0uZGF0YSk7XG5cblx0XHRyZXR1cm4gJGh0dHAuZ2V0KGAvYXBpL21vdmllcy8ke3BhZ2V9YClcblx0XHRcdC50aGVuKHJlcyA9PiB7XG5cdFx0XHRcdHBhZ2VDYWNoZVtwYWdlXSA9IHsgZGF0YTogcmVzLmRhdGEsIHRpbWU6IERhdGUubm93KCkgfTtcblx0XHRcdFx0cmV0dXJuIHJlcy5kYXRhO1xuXHRcdFx0fSk7XG5cdH1cblxuXHRyZXR1cm4gZmFjdG9yeTtcbn0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ21vdmllR3JpZCcpLmNvbmZpZyhmdW5jdGlvbiAoJHN0YXRlUHJvdmlkZXIpIHtcblx0JHN0YXRlUHJvdmlkZXIuc3RhdGUoJ21vdmllcycsIHtcblx0XHR1cmw6ICcvbW92aWVzLzpwYWdlJyxcblx0XHRjb250cm9sbGVyOiAnTW92aWVzQ3RybCcsXG5cdFx0dGVtcGxhdGVVcmw6ICdtb3ZpZXMvbW92aWVzLmh0bWwnLFxuXHRcdHJlc29sdmU6IHtcblx0XHRcdG1vdmllczogZnVuY3Rpb24gKE1vdmllcywgJHN0YXRlUGFyYW1zKSB7XG5cdFx0XHRcdHJldHVybiBNb3ZpZXMuZ2V0UGFnZSgkc3RhdGVQYXJhbXMucGFnZSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9KVxufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
